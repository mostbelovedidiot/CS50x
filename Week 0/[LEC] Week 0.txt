Bits, Bytes, Base-# Systems of ordering
===================================================================================
bit
-------------------------------------------------------
bit = binary digit that can represent 0 (off) or 1 (on)

base # systems of ordering
-------------------------------------------------------
computer use base-2 to count
2^3 2^2 2^1 2^0
 8   4   2   1
 consider the following bit assemblies:
 1   0   0   1  = 9
 0   0   1   0  = 2=
decimal system uses base-10 to count
 10^3 10^2 10^1 10^0
 1000  100  10   1
 consider the following decimal assembly:
   1    3    4   6 = 1346

byte
-------------------------------------------------------
byte = 8 bits
bytes can represent values from 0-255
 example of byte:
 00000101 = 5
 11111111 = 255

ASCII Standard
-------------------------------------------------------
 letters (both cases), keyboard functions, punctuation, positions in a text (start of header, start of line), and many more things are assigned byte values by the ASCII standard
 consider the following:
  H   I   !
 72  73  33   (each number would be represented by its respective byte value)
Limitation is 256 total symbols due to each symbol being represented by a byte

Unicode
-------------------------------------------------------
 To establish further symbols (different languages, emojis) unicode abandoned the use of singular bytes and used custom-sized bit assemblies (16 [2 bytes], 24 [3 bytes], 32 [4 bytes])
 
 Unicode generally uses base-16 in a compacted format that might look something like this: U+1F602 (where the U+ indicates that a base-16 unicode string is incoming) and this can be expanded with additional base-16 strings to then modify the reference itself (i.e. add skin tone U+1F44D U+1F3F, or utilize a combinatory string [U+200D] that merges emojis together [U+1F469 U+200D U+2764 U+FE0F U+200D U+1F469])

Color
-------------------------------------------------------
each pixel represents 24 bits or 3 bytes to indicate the three components of the pixel: rgb. so each of those little squares is exactly 3 bytes

video
-------------------------------------------------------
assemblies of pixel forming an image, images then displayed in fast sequential motion (30 frames per second = 30 assemblies of pixels per second)

music
-------------------------------------------------------
could have different byte-structures to represent different musical factors, pitch, loudness, duration, and then simply combine them together